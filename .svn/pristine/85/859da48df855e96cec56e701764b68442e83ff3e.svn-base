#!/bain/bash

#本脚本功能


Env= # 指定发布机对应的环境，dev:开发，test:测试，uat:准生产，prod:生产
[[ $Env = "" ]]&& echo "第6行未指定环境"
Scripts_dir="/data/scripts"

Func=$1
Aplct=$2   # app fm 
Pkg=$3   # 指定包路径
Cos_base=/data/RexDeployV3/scripts/cos_base
Cos_path="$Scripts_dir/cos_${Aplct}_${Env}"   # 命名统一+环境


logdir="/data/log/cos"
log="$logdir"/shell.log
is_font=1                #终端是否打印日志: 1打印 0不打印 
is_log=1                 #是否记录日志: 1记录 0不记录

datef(){
	date "+%Y-%m-%d %H:%M:%S"
}
print_log(){
	if [[ $is_log -eq 1  ]];then
		[[ -d $logdir ]] || mkdir -p $logdir
		echo -e "[ $(datef) ] $1" >> $log
	fi
	if [[ $is_font -eq 1  ]];then
		echo -e "[ $(datef) ] $1"
	fi
}



# 判断
Judge(){
	[[ ! -e $Pkg ]] && print_log "包路径${Pkg}不存在" && exit 1
	[[ ! -d $Cos_path ]] && print_log "cos脚本路径${Cos_path}不存在" && exit 1
}



# 解压
Unzip(){
	Bao=`echo $Pkg |awk -F/ '{print $NF}'`  # 包名

	cp ${Pkg} $Cos_path/workspace_new/
	cd $Cos_path/workspace_new
	Pkg_type=`echo ${Pkg} |awk -F. '{print $NF}'`

	if [[ $Pkg_type == zip ]];then
		unzip -o $Bao > /dev/null
		if [[ $? -eq 0 ]];then
			print_log "解压完成"
		else
			print_log "解压失败"
			exit 1
		fi
		mv $Bao /tmp/ -f

	elif [[ $Pkg_type == gz ]];then

		tar -xf $Bao
		if [[ $? -eq 0 ]];then
			print_log "解压完成"
		else
			print_log "解压失败"
			exit 1
		fi
		mv $Bao /tmp -f
	else
		print_log "包格式不支持"
	fi
	
}



# 修改版本号
Chg_ver_app(){
	Ver=$(shuf -i 10-99 -n 1)
	sed -i "s#78#$Ver#" zzb.manifest
	print_log "版本号修改完成:zzb.manifest ${Ver}"
}



# 上传
Upload(){
	cd $Cos_path
	sh cos_sync/start_cos_sync.sh |tee -a $log
}


# 新增
Add_dir(){

	COSDIR=cos_${Aplct}_${Env}

	Cos_base="$Scripts_dir/$Cos_base"
	cd $Scripts_dir
	[[ ! -d $Cos_base ]] && print_log "cos模板文件不存在" && exit 1
	[[ -d $COSDIR ]] && print_log "该环境cos文件已存在" && exit 1
	cp -ar $Cos_base  $COSDIR

	print_log "生成cos_${Aplct}_${Env}目录，准备修改配置"
	read -p "请输入bucket名字: " BKTNAME
	read -p "请输入cos路径: " COSPATH

	print_log "生成cos文件夹:${COSDIR},对应bucket:${BKTNAME},存储路径:${COSPATH}"

    # 替换配置文件config.json
	cd $Scripts_dir/$COSDIR/cos_sync/conf/
	sed -i "s/BKTNAME/${BKTNAME}/" config.json
	sed -i "s/COSDIR/${COSDIR}/" config.json
	sed -i "s#COSPATH#${COSPATH}#" config.json
	cat config.json

}



main(){

	case $Func in
		add_cos)
		Add_dir
		;;

		upload)
		print_log "调用脚本"
		Judge

		print_log "解压包"
		Unzip

		[[ $Aplct == app ]] && Chg_ver_app

		print_log "开始上传cos,环境:${Env} 服务:${Aplct}"
		Upload
		;;


		*)
		echo "Usage:$0 (add_cos|upload)"
		exit 1
		;;
	esac


}

main
